{"ast":null,"code":"import { useLoader } from 'react-three-fiber';\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';\nimport { DRACOLoader } from 'three/examples/jsm/loaders/DRACOLoader';\nimport { MeshoptDecoder } from 'three/examples/jsm/libs/meshopt_decoder.module.js';\n\nfunction extensions(useDraco, useMeshopt) {\n  return loader => {\n    if (useDraco) {\n      const dracoLoader = new DRACOLoader();\n      dracoLoader.setDecoderPath(typeof useDraco === 'string' ? useDraco : 'https://www.gstatic.com/draco/v1/decoders/');\n      loader.setDRACOLoader(dracoLoader);\n    }\n\n    if (useMeshopt) {\n      loader.setMeshoptDecoder(MeshoptDecoder);\n    }\n  };\n}\n\nfunction useGLTF(path, useDraco = true, useMeshOpt = true) {\n  const gltf = useLoader(GLTFLoader, path, extensions(useDraco, useMeshOpt));\n  return gltf;\n}\n\nuseGLTF.preload = (path, useDraco = true, useMeshOpt = true) => useLoader.preload(GLTFLoader, path, extensions(useDraco, useMeshOpt));\n\nexport { useGLTF };","map":{"version":3,"sources":["D:/AA_CLASS/COURS GOBELINS DMII1/ARTISANAT/artisanat-gobelins-vercel/app/node_modules/@react-three/drei/core/useGLTF.js"],"names":["useLoader","GLTFLoader","DRACOLoader","MeshoptDecoder","extensions","useDraco","useMeshopt","loader","dracoLoader","setDecoderPath","setDRACOLoader","setMeshoptDecoder","useGLTF","path","useMeshOpt","gltf","preload"],"mappings":"AAAA,SAASA,SAAT,QAA0B,mBAA1B;AACA,SAASC,UAAT,QAA2B,uCAA3B;AACA,SAASC,WAAT,QAA4B,wCAA5B;AACA,SAASC,cAAT,QAA+B,mDAA/B;;AAEA,SAASC,UAAT,CAAoBC,QAApB,EAA8BC,UAA9B,EAA0C;AACxC,SAAOC,MAAM,IAAI;AACf,QAAIF,QAAJ,EAAc;AACZ,YAAMG,WAAW,GAAG,IAAIN,WAAJ,EAApB;AACAM,MAAAA,WAAW,CAACC,cAAZ,CAA2B,OAAOJ,QAAP,KAAoB,QAApB,GAA+BA,QAA/B,GAA0C,4CAArE;AACAE,MAAAA,MAAM,CAACG,cAAP,CAAsBF,WAAtB;AACD;;AAED,QAAIF,UAAJ,EAAgB;AACdC,MAAAA,MAAM,CAACI,iBAAP,CAAyBR,cAAzB;AACD;AACF,GAVD;AAWD;;AAED,SAASS,OAAT,CAAiBC,IAAjB,EAAuBR,QAAQ,GAAG,IAAlC,EAAwCS,UAAU,GAAG,IAArD,EAA2D;AACzD,QAAMC,IAAI,GAAGf,SAAS,CAACC,UAAD,EAAaY,IAAb,EAAmBT,UAAU,CAACC,QAAD,EAAWS,UAAX,CAA7B,CAAtB;AACA,SAAOC,IAAP;AACD;;AAEDH,OAAO,CAACI,OAAR,GAAkB,CAACH,IAAD,EAAOR,QAAQ,GAAG,IAAlB,EAAwBS,UAAU,GAAG,IAArC,KAA8Cd,SAAS,CAACgB,OAAV,CAAkBf,UAAlB,EAA8BY,IAA9B,EAAoCT,UAAU,CAACC,QAAD,EAAWS,UAAX,CAA9C,CAAhE;;AAEA,SAASF,OAAT","sourcesContent":["import { useLoader } from 'react-three-fiber';\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';\nimport { DRACOLoader } from 'three/examples/jsm/loaders/DRACOLoader';\nimport { MeshoptDecoder } from 'three/examples/jsm/libs/meshopt_decoder.module.js';\n\nfunction extensions(useDraco, useMeshopt) {\n  return loader => {\n    if (useDraco) {\n      const dracoLoader = new DRACOLoader();\n      dracoLoader.setDecoderPath(typeof useDraco === 'string' ? useDraco : 'https://www.gstatic.com/draco/v1/decoders/');\n      loader.setDRACOLoader(dracoLoader);\n    }\n\n    if (useMeshopt) {\n      loader.setMeshoptDecoder(MeshoptDecoder);\n    }\n  };\n}\n\nfunction useGLTF(path, useDraco = true, useMeshOpt = true) {\n  const gltf = useLoader(GLTFLoader, path, extensions(useDraco, useMeshOpt));\n  return gltf;\n}\n\nuseGLTF.preload = (path, useDraco = true, useMeshOpt = true) => useLoader.preload(GLTFLoader, path, extensions(useDraco, useMeshOpt));\n\nexport { useGLTF };\n"]},"metadata":{},"sourceType":"module"}