{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport _extends from '@babel/runtime/helpers/esm/extends';\nimport _objectWithoutPropertiesLoose from '@babel/runtime/helpers/esm/objectWithoutPropertiesLoose';\nimport { forwardRef, useLayoutEffect, createElement } from 'react';\nimport { useThree, useUpdate } from 'react-three-fiber';\nimport mergeRefs from 'react-merge-refs';\nvar PerspectiveCamera = /*#__PURE__*/forwardRef(_c = _s(function (_ref, ref) {\n  _s();\n\n  var _ref$makeDefault = _ref.makeDefault,\n      makeDefault = _ref$makeDefault === void 0 ? false : _ref$makeDefault,\n      props = _objectWithoutPropertiesLoose(_ref, [\"makeDefault\"]);\n\n  var _useThree = useThree(),\n      setDefaultCamera = _useThree.setDefaultCamera,\n      camera = _useThree.camera,\n      size = _useThree.size;\n\n  var cameraRef = useUpdate(function (cam) {\n    cam.aspect = size.width / size.height;\n    cam.updateProjectionMatrix();\n  }, [size, props]);\n  useLayoutEffect(function () {\n    if (makeDefault && cameraRef.current) {\n      var oldCam = camera;\n      setDefaultCamera(cameraRef.current);\n      return function () {\n        return setDefaultCamera(oldCam);\n      };\n    }\n  }, [camera, cameraRef, makeDefault, setDefaultCamera]);\n  return /*#__PURE__*/createElement(\"perspectiveCamera\", _extends({\n    ref: mergeRefs([cameraRef, ref])\n  }, props));\n}, \"CI1O6u3tsd8J75hEkU6YmzTdnq0=\", false, function () {\n  return [useThree, useUpdate];\n}));\n_c2 = PerspectiveCamera;\nexport { PerspectiveCamera };\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"PerspectiveCamera$forwardRef\");\n$RefreshReg$(_c2, \"PerspectiveCamera\");","map":{"version":3,"sources":["D:/AA_CLASS/COURS GOBELINS DMII1/ARTISANAT/artisanat-gobelins-vercel/app/node_modules/@react-three/drei/core/PerspectiveCamera.js"],"names":["_extends","_objectWithoutPropertiesLoose","forwardRef","useLayoutEffect","createElement","useThree","useUpdate","mergeRefs","PerspectiveCamera","_ref","ref","makeDefault","props","setDefaultCamera","camera","size","cameraRef","cam","aspect","width","height","updateProjectionMatrix","current","oldCam"],"mappings":";;AAAA,OAAOA,QAAP,MAAqB,oCAArB;AACA,OAAOC,6BAAP,MAA0C,yDAA1C;AACA,SAASC,UAAT,EAAqBC,eAArB,EAAsCC,aAAtC,QAA2D,OAA3D;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,mBAApC;AACA,OAAOC,SAAP,MAAsB,kBAAtB;AAEA,IAAMC,iBAAiB,GAAG,aAAaN,UAAU,SAAC,UAACO,IAAD,EAAOC,GAAP,EAAe;AAAA;;AAAA,yBAG3DD,IAH2D,CAE7DE,WAF6D;AAAA,MAE7DA,WAF6D,iCAE/C,KAF+C;AAAA,MAI3DC,KAJ2D,GAInDX,6BAA6B,CAACQ,IAAD,EAAO,CAAC,aAAD,CAAP,CAJsB;;AAAA,kBAU3DJ,QAAQ,EAVmD;AAAA,MAO7DQ,gBAP6D,aAO7DA,gBAP6D;AAAA,MAQ7DC,MAR6D,aAQ7DA,MAR6D;AAAA,MAS7DC,IAT6D,aAS7DA,IAT6D;;AAW/D,MAAMC,SAAS,GAAGV,SAAS,CAAC,UAAAW,GAAG,EAAI;AACjCA,IAAAA,GAAG,CAACC,MAAJ,GAAaH,IAAI,CAACI,KAAL,GAAaJ,IAAI,CAACK,MAA/B;AACAH,IAAAA,GAAG,CAACI,sBAAJ;AACD,GAH0B,EAGxB,CAACN,IAAD,EAAOH,KAAP,CAHwB,CAA3B;AAIAT,EAAAA,eAAe,CAAC,YAAM;AACpB,QAAIQ,WAAW,IAAIK,SAAS,CAACM,OAA7B,EAAsC;AACpC,UAAMC,MAAM,GAAGT,MAAf;AACAD,MAAAA,gBAAgB,CAACG,SAAS,CAACM,OAAX,CAAhB;AACA,aAAO;AAAA,eAAMT,gBAAgB,CAACU,MAAD,CAAtB;AAAA,OAAP;AACD;AACF,GANc,EAMZ,CAACT,MAAD,EAASE,SAAT,EAAoBL,WAApB,EAAiCE,gBAAjC,CANY,CAAf;AAOA,SAAO,aAAaT,aAAa,CAAC,mBAAD,EAAsBJ,QAAQ,CAAC;AAC9DU,IAAAA,GAAG,EAAEH,SAAS,CAAC,CAACS,SAAD,EAAYN,GAAZ,CAAD;AADgD,GAAD,EAE5DE,KAF4D,CAA9B,CAAjC;AAGD,CAzBgD;AAAA,UAU3CP,QAV2C,EAW7BC,SAX6B;AAAA,GAAjD;MAAME,iB;AA2BN,SAASA,iBAAT","sourcesContent":["import _extends from '@babel/runtime/helpers/esm/extends';\nimport _objectWithoutPropertiesLoose from '@babel/runtime/helpers/esm/objectWithoutPropertiesLoose';\nimport { forwardRef, useLayoutEffect, createElement } from 'react';\nimport { useThree, useUpdate } from 'react-three-fiber';\nimport mergeRefs from 'react-merge-refs';\n\nconst PerspectiveCamera = /*#__PURE__*/forwardRef((_ref, ref) => {\n  let {\n    makeDefault = false\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, [\"makeDefault\"]);\n\n  const {\n    setDefaultCamera,\n    camera,\n    size\n  } = useThree();\n  const cameraRef = useUpdate(cam => {\n    cam.aspect = size.width / size.height;\n    cam.updateProjectionMatrix();\n  }, [size, props]);\n  useLayoutEffect(() => {\n    if (makeDefault && cameraRef.current) {\n      const oldCam = camera;\n      setDefaultCamera(cameraRef.current);\n      return () => setDefaultCamera(oldCam);\n    }\n  }, [camera, cameraRef, makeDefault, setDefaultCamera]);\n  return /*#__PURE__*/createElement(\"perspectiveCamera\", _extends({\n    ref: mergeRefs([cameraRef, ref])\n  }, props));\n});\n\nexport { PerspectiveCamera };\n"]},"metadata":{},"sourceType":"module"}