{"ast":null,"code":"import _classCallCheck from \"D:/AA_CLASS/COURS GOBELINS DMII1/ARTISANAT/artisanat-gobelins-vercel/app/node_modules/next/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:/AA_CLASS/COURS GOBELINS DMII1/ARTISANAT/artisanat-gobelins-vercel/app/node_modules/next/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"D:/AA_CLASS/COURS GOBELINS DMII1/ARTISANAT/artisanat-gobelins-vercel/app/node_modules/next/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"D:/AA_CLASS/COURS GOBELINS DMII1/ARTISANAT/artisanat-gobelins-vercel/app/node_modules/next/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"D:/AA_CLASS/COURS GOBELINS DMII1/ARTISANAT/artisanat-gobelins-vercel/app/node_modules/next/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:/AA_CLASS/COURS GOBELINS DMII1/ARTISANAT/artisanat-gobelins-vercel/app/node_modules/next/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\n\nvar _s = $RefreshSig$();\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport _extends from '@babel/runtime/helpers/esm/extends';\nimport _objectWithoutPropertiesLoose from '@babel/runtime/helpers/esm/objectWithoutPropertiesLoose';\nimport { forwardRef, useState, createElement } from 'react';\nimport { MeshPhysicalMaterial } from 'three';\nimport { useFrame } from 'react-three-fiber';\nimport _defineProperty from '@babel/runtime/helpers/esm/defineProperty';\nimport distort from '../helpers/glsl/distort.vert.glsl.js';\n\nvar DistortMaterialImpl = /*#__PURE__*/function (_MeshPhysicalMaterial) {\n  _inherits(DistortMaterialImpl, _MeshPhysicalMaterial);\n\n  var _super = _createSuper(DistortMaterialImpl);\n\n  function DistortMaterialImpl() {\n    var _this;\n\n    var parameters = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, DistortMaterialImpl);\n\n    _this = _super.call(this, parameters);\n\n    _defineProperty(_assertThisInitialized(_this), \"_time\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_distort\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_radius\", void 0);\n\n    _this.setValues(parameters);\n\n    _this._time = {\n      value: 0\n    };\n    _this._distort = {\n      value: 0.4\n    };\n    _this._radius = {\n      value: 1\n    };\n    return _this;\n  }\n\n  _createClass(DistortMaterialImpl, [{\n    key: \"onBeforeCompile\",\n    value: function onBeforeCompile(shader) {\n      shader.uniforms.time = this._time;\n      shader.uniforms.radius = this._radius;\n      shader.uniforms.distort = this._distort;\n      shader.vertexShader = \"\\n      uniform float time;\\n      uniform float radius;\\n      uniform float distort;\\n      \" + distort + \"\\n      \" + shader.vertexShader + \"\\n    \";\n      shader.vertexShader = shader.vertexShader.replace('#include <begin_vertex>', \"\\n        float updateTime = time / 50.0;\\n        float noise = snoise(vec3(position / 2.0 + updateTime * 5.0));\\n        vec3 transformed = vec3(position * (noise * pow(distort, 2.0) + radius));\\n        \");\n    }\n  }, {\n    key: \"time\",\n    get: function get() {\n      return this._time.value;\n    },\n    set: function set(v) {\n      this._time.value = v;\n    }\n  }, {\n    key: \"distort\",\n    get: function get() {\n      return this._distort.value;\n    },\n    set: function set(v) {\n      this._distort.value = v;\n    }\n  }, {\n    key: \"radius\",\n    get: function get() {\n      return this._radius.value;\n    },\n    set: function set(v) {\n      this._radius.value = v;\n    }\n  }]);\n\n  return DistortMaterialImpl;\n}(MeshPhysicalMaterial);\n\nvar MeshDistortMaterial = /*#__PURE__*/forwardRef(_c = _s(function (_ref, ref) {\n  _s();\n\n  var _ref$speed = _ref.speed,\n      speed = _ref$speed === void 0 ? 1 : _ref$speed,\n      props = _objectWithoutPropertiesLoose(_ref, [\"speed\"]);\n\n  var _useState = useState(function () {\n    return new DistortMaterialImpl();\n  }),\n      material = _useState[0];\n\n  useFrame(function (state) {\n    return material && (material.time = state.clock.getElapsedTime() * speed);\n  });\n  return /*#__PURE__*/createElement(\"primitive\", _extends({\n    dispose: undefined,\n    object: material,\n    ref: ref,\n    attach: \"material\"\n  }, props));\n}, \"pAvxI+ICNvKoU1PAsY+pUUqmQVM=\", false, function () {\n  return [useFrame];\n}));\n_c2 = MeshDistortMaterial;\nexport { MeshDistortMaterial };\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MeshDistortMaterial$forwardRef\");\n$RefreshReg$(_c2, \"MeshDistortMaterial\");","map":{"version":3,"sources":["D:/AA_CLASS/COURS GOBELINS DMII1/ARTISANAT/artisanat-gobelins-vercel/app/node_modules/@react-three/drei/core/MeshDistortMaterial.js"],"names":["_extends","_objectWithoutPropertiesLoose","forwardRef","useState","createElement","MeshPhysicalMaterial","useFrame","_defineProperty","distort","DistortMaterialImpl","parameters","setValues","_time","value","_distort","_radius","shader","uniforms","time","radius","vertexShader","replace","v","MeshDistortMaterial","_ref","ref","speed","props","material","state","clock","getElapsedTime","dispose","undefined","object","attach"],"mappings":"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","sourcesContent":["import _extends from '@babel/runtime/helpers/esm/extends';\nimport _objectWithoutPropertiesLoose from '@babel/runtime/helpers/esm/objectWithoutPropertiesLoose';\nimport { forwardRef, useState, createElement } from 'react';\nimport { MeshPhysicalMaterial } from 'three';\nimport { useFrame } from 'react-three-fiber';\nimport _defineProperty from '@babel/runtime/helpers/esm/defineProperty';\nimport distort from '../helpers/glsl/distort.vert.glsl.js';\n\nclass DistortMaterialImpl extends MeshPhysicalMaterial {\n  constructor(parameters = {}) {\n    super(parameters);\n\n    _defineProperty(this, \"_time\", void 0);\n\n    _defineProperty(this, \"_distort\", void 0);\n\n    _defineProperty(this, \"_radius\", void 0);\n\n    this.setValues(parameters);\n    this._time = {\n      value: 0\n    };\n    this._distort = {\n      value: 0.4\n    };\n    this._radius = {\n      value: 1\n    };\n  }\n\n  onBeforeCompile(shader) {\n    shader.uniforms.time = this._time;\n    shader.uniforms.radius = this._radius;\n    shader.uniforms.distort = this._distort;\n    shader.vertexShader = \"\\n      uniform float time;\\n      uniform float radius;\\n      uniform float distort;\\n      \" + distort + \"\\n      \" + shader.vertexShader + \"\\n    \";\n    shader.vertexShader = shader.vertexShader.replace('#include <begin_vertex>', \"\\n        float updateTime = time / 50.0;\\n        float noise = snoise(vec3(position / 2.0 + updateTime * 5.0));\\n        vec3 transformed = vec3(position * (noise * pow(distort, 2.0) + radius));\\n        \");\n  }\n\n  get time() {\n    return this._time.value;\n  }\n\n  set time(v) {\n    this._time.value = v;\n  }\n\n  get distort() {\n    return this._distort.value;\n  }\n\n  set distort(v) {\n    this._distort.value = v;\n  }\n\n  get radius() {\n    return this._radius.value;\n  }\n\n  set radius(v) {\n    this._radius.value = v;\n  }\n\n}\n\nconst MeshDistortMaterial = /*#__PURE__*/forwardRef((_ref, ref) => {\n  let {\n    speed = 1\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, [\"speed\"]);\n\n  const [material] = useState(() => new DistortMaterialImpl());\n  useFrame(state => material && (material.time = state.clock.getElapsedTime() * speed));\n  return /*#__PURE__*/createElement(\"primitive\", _extends({\n    dispose: undefined,\n    object: material,\n    ref: ref,\n    attach: \"material\"\n  }, props));\n});\n\nexport { MeshDistortMaterial };\n"]},"metadata":{},"sourceType":"module"}