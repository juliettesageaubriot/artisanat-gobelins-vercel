{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/juliette/Sites/localhost/GOBELINS/testThreeArtisanat/app/src/components/examples/canvas/Sphere.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { Suspense } from 'react';\nimport { Environment, MeshDistortMaterial, Sphere } from '@react-three/drei';\nimport { a, useSpring } from '@react-spring/three';\nimport useStore from '@/helpers/store';\nvar M = a(MeshDistortMaterial);\n_c = M;\n\nvar SphereComponent = function SphereComponent() {\n  _s();\n\n  var router = useStore(function (s) {\n    return s.router;\n  });\n\n  var _useSpring = useSpring({\n    color: router.route === '/box' ? '#272727' : 'black'\n  }),\n      color = _useSpring.color;\n\n  return /*#__PURE__*/_jsxDEV(Suspense, {\n    fallback: null,\n    children: [/*#__PURE__*/_jsxDEV(\"ambientLight\", {\n      intensity: 0.5\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Sphere, {\n      args: [1, 32, 32],\n      onClick: function onClick() {\n        router.push(\"/box\");\n      },\n      children: /*#__PURE__*/_jsxDEV(M, {\n        factor: 2,\n        color: color\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Environment, {\n      preset: 'studio'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(SphereComponent, \"MRuXuY3RQVuD6Hts9SVxqDN1zXE=\", false, function () {\n  return [useStore, useSpring];\n});\n\n_c2 = SphereComponent;\nexport default SphereComponent;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"M\");\n$RefreshReg$(_c2, \"SphereComponent\");","map":{"version":3,"sources":["/Users/juliette/Sites/localhost/GOBELINS/testThreeArtisanat/app/src/components/examples/canvas/Sphere.js"],"names":["Suspense","Environment","MeshDistortMaterial","Sphere","a","useSpring","useStore","M","SphereComponent","router","s","color","route","push"],"mappings":";;;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,WAAT,EAAsBC,mBAAtB,EAA2CC,MAA3C,QAAyD,mBAAzD;AACA,SAASC,CAAT,EAAYC,SAAZ,QAA6B,qBAA7B;AACA,OAAOC,QAAP,MAAqB,iBAArB;AAEA,IAAMC,CAAC,GAAGH,CAAC,CAACF,mBAAD,CAAX;KAAMK,C;;AAEN,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AAAA;;AAC5B,MAAMC,MAAM,GAAGH,QAAQ,CAAC,UAACI,CAAD;AAAA,WAAOA,CAAC,CAACD,MAAT;AAAA,GAAD,CAAvB;;AAD4B,mBAEVJ,SAAS,CAAC;AAC1BM,IAAAA,KAAK,EAAEF,MAAM,CAACG,KAAP,KAAiB,MAAjB,GAA0B,SAA1B,GAAsC;AADnB,GAAD,CAFC;AAAA,MAEpBD,KAFoB,cAEpBA,KAFoB;;AAK5B,sBACE,QAAC,QAAD;AAAU,IAAA,QAAQ,EAAE,IAApB;AAAA,4BACE;AAAc,MAAA,SAAS,EAAE;AAAzB;AAAA;AAAA;AAAA;AAAA,aADF,eAEE,QAAC,MAAD;AACE,MAAA,IAAI,EAAE,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,CADR;AAEE,MAAA,OAAO,EAAE,mBAAM;AACbF,QAAAA,MAAM,CAACI,IAAP;AACD,OAJH;AAAA,6BAME,QAAC,CAAD;AAAG,QAAA,MAAM,EAAE,CAAX;AAAc,QAAA,KAAK,EAAEF;AAArB;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA,aAFF,eAUE,QAAC,WAAD;AAAa,MAAA,MAAM,EAAE;AAArB;AAAA;AAAA;AAAA;AAAA,aAVF;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAcD,CAnBD;;GAAMH,e;UACWF,Q,EACGD,S;;;MAFdG,e;AAqBN,eAAeA,eAAf","sourcesContent":["import { Suspense } from 'react'\nimport { Environment, MeshDistortMaterial, Sphere } from '@react-three/drei'\nimport { a, useSpring } from '@react-spring/three'\nimport useStore from '@/helpers/store'\n\nconst M = a(MeshDistortMaterial)\n\nconst SphereComponent = () => {\n  const router = useStore((s) => s.router)\n  const { color } = useSpring({\n    color: router.route === '/box' ? '#272727' : 'black',\n  })\n  return (\n    <Suspense fallback={null}>\n      <ambientLight intensity={0.5} />\n      <Sphere\n        args={[1, 32, 32]}\n        onClick={() => {\n          router.push(`/box`)\n        }}\n      >\n        <M factor={2} color={color} />\n      </Sphere>\n      <Environment preset={'studio'} />\n    </Suspense>\n  )\n}\n\nexport default SphereComponent\n"]},"metadata":{},"sourceType":"module"}