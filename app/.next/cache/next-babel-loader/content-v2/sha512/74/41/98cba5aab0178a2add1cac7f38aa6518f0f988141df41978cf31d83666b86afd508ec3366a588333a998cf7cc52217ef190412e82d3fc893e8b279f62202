{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useLayoutEffect } from 'react';\nimport { useThree, useLoader } from 'react-three-fiber';\nimport { PMREMGenerator, CubeTextureLoader } from 'three';\nimport { RGBELoader } from 'three/examples/jsm/loaders/RGBELoader';\nimport { useAsset } from 'use-asset';\nimport { presetsObj } from './helpers/environment-assets.js';\n\nfunction getTexture(texture, gen, isCubeMap) {\n  if (isCubeMap) {\n    gen.compileEquirectangularShader();\n    return gen.fromCubemap(texture).texture;\n  }\n\n  return gen.fromEquirectangular(texture).texture;\n}\n\nvar CUBEMAP_ROOT = 'https://rawcdn.githack.com/mattrossman/drei-assets/b597559ff62f85ec691df28cbea5ecb1263a2085';\n\nfunction Environment(_ref) {\n  _s();\n\n  var _ref$background = _ref.background,\n      background = _ref$background === void 0 ? false : _ref$background,\n      _ref$files = _ref.files,\n      files = _ref$files === void 0 ? ['px.png', 'nx.png', 'py.png', 'ny.png', 'pz.png', 'nz.png'] : _ref$files,\n      _ref$path = _ref.path,\n      path = _ref$path === void 0 ? '/' : _ref$path,\n      _ref$preset = _ref.preset,\n      preset = _ref$preset === void 0 ? undefined : _ref$preset;\n\n  if (preset) {\n    if (!(preset in presetsObj)) {\n      throw new Error('Preset must be one of: ' + Object.keys(presetsObj).join(', '));\n    }\n\n    files = presetsObj[preset];\n    path = CUBEMAP_ROOT + '/hdri/';\n  }\n\n  var _useThree = useThree(),\n      gl = _useThree.gl,\n      scene = _useThree.scene;\n\n  var isCubeMap = Array.isArray(files);\n  var loader = isCubeMap ? CubeTextureLoader : RGBELoader; // @ts-expect-error\n\n  var loaderResult = useLoader(loader, isCubeMap ? [files] : files, function (loader) {\n    return loader.setPath(path);\n  });\n  var map = isCubeMap ? loaderResult[0] : loaderResult; // PMREMGenerator takes its sweet time to generate the env-map,\n  // Let's make this part of suspense, or else it just yields a frame-skip\n\n  var texture = useAsset(function () {\n    return new Promise(function (res) {\n      var gen = new PMREMGenerator(gl);\n      var texture = getTexture(map, gen, isCubeMap);\n      gen.dispose();\n      map.dispose();\n      res(texture);\n    });\n  }, [map, background]);\n  useLayoutEffect(function () {\n    var oldbg = scene.background;\n    var oldenv = scene.environment;\n    if (background) scene.background = texture;\n    scene.environment = texture;\n    return function () {\n      scene.environment = oldenv;\n      scene.background = oldbg;\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [texture]);\n  return null;\n}\n\n_s(Environment, \"Xi/1M79sN+HlCM0k2q29QH0/FGY=\", false, function () {\n  return [useThree, useLoader, useAsset];\n});\n\n_c = Environment;\nexport { Environment };\n\nvar _c;\n\n$RefreshReg$(_c, \"Environment\");","map":{"version":3,"sources":["/Users/juliette/Sites/localhost/GOBELINS/next.js/examples/with-three-js/node_modules/drei/Environment.js"],"names":["useLayoutEffect","useThree","useLoader","PMREMGenerator","CubeTextureLoader","RGBELoader","useAsset","presetsObj","getTexture","texture","gen","isCubeMap","compileEquirectangularShader","fromCubemap","fromEquirectangular","CUBEMAP_ROOT","Environment","background","files","path","preset","undefined","Error","Object","keys","join","gl","scene","Array","isArray","loader","loaderResult","setPath","map","Promise","res","dispose","oldbg","oldenv","environment"],"mappings":"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","sourcesContent":["import { useLayoutEffect } from 'react';\nimport { useThree, useLoader } from 'react-three-fiber';\nimport { PMREMGenerator, CubeTextureLoader } from 'three';\nimport { RGBELoader } from 'three/examples/jsm/loaders/RGBELoader';\nimport { useAsset } from 'use-asset';\nimport { presetsObj } from './helpers/environment-assets.js';\n\nfunction getTexture(texture, gen, isCubeMap) {\n  if (isCubeMap) {\n    gen.compileEquirectangularShader();\n    return gen.fromCubemap(texture).texture;\n  }\n\n  return gen.fromEquirectangular(texture).texture;\n}\n\nconst CUBEMAP_ROOT = 'https://rawcdn.githack.com/mattrossman/drei-assets/b597559ff62f85ec691df28cbea5ecb1263a2085';\nfunction Environment({\n  background = false,\n  files = ['px.png', 'nx.png', 'py.png', 'ny.png', 'pz.png', 'nz.png'],\n  path = '/',\n  preset = undefined\n}) {\n  if (preset) {\n    if (!(preset in presetsObj)) {\n      throw new Error('Preset must be one of: ' + Object.keys(presetsObj).join(', '));\n    }\n\n    files = presetsObj[preset];\n    path = CUBEMAP_ROOT + '/hdri/';\n  }\n\n  const {\n    gl,\n    scene\n  } = useThree();\n  const isCubeMap = Array.isArray(files);\n  const loader = isCubeMap ? CubeTextureLoader : RGBELoader; // @ts-expect-error\n\n  const loaderResult = useLoader(loader, isCubeMap ? [files] : files, loader => loader.setPath(path));\n  const map = isCubeMap ? loaderResult[0] : loaderResult; // PMREMGenerator takes its sweet time to generate the env-map,\n  // Let's make this part of suspense, or else it just yields a frame-skip\n\n  const texture = useAsset(() => new Promise(res => {\n    const gen = new PMREMGenerator(gl);\n    const texture = getTexture(map, gen, isCubeMap);\n    gen.dispose();\n    map.dispose();\n    res(texture);\n  }), [map, background]);\n  useLayoutEffect(() => {\n    const oldbg = scene.background;\n    const oldenv = scene.environment;\n    if (background) scene.background = texture;\n    scene.environment = texture;\n    return () => {\n      scene.environment = oldenv;\n      scene.background = oldbg;\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [texture]);\n  return null;\n}\n\nexport { Environment };\n"]},"metadata":{},"sourceType":"module"}