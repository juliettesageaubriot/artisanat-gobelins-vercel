{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport _extends from '@babel/runtime/helpers/esm/extends';\nimport _objectWithoutPropertiesLoose from '@babel/runtime/helpers/esm/objectWithoutPropertiesLoose';\nimport { useRef, useState, useCallback, useMemo, createElement } from 'react';\nimport { Plane, Vector3, Matrix4, Vector4, PerspectiveCamera, LinearFilter, RGBFormat, WebGLRenderTarget, DepthTexture, DepthFormat, UnsignedShortType } from 'three';\nimport { extend, useThree, useFrame } from 'react-three-fiber';\nimport { BlurPass } from '../materials/BlurPass.js';\nimport { MeshReflectorMaterial } from '../materials/MeshReflectorMaterial.js';\nextend({\n  MeshReflectorMaterial: MeshReflectorMaterial\n});\n\nfunction Reflector(_ref) {\n  _s();\n\n  var _ref$mixBlur = _ref.mixBlur,\n      mixBlur = _ref$mixBlur === void 0 ? 0.0 : _ref$mixBlur,\n      _ref$mixStrength = _ref.mixStrength,\n      mixStrength = _ref$mixStrength === void 0 ? 0.5 : _ref$mixStrength,\n      _ref$resolution = _ref.resolution,\n      resolution = _ref$resolution === void 0 ? 256 : _ref$resolution,\n      _ref$blur = _ref.blur,\n      blur = _ref$blur === void 0 ? [0, 0] : _ref$blur,\n      _ref$args = _ref.args,\n      args = _ref$args === void 0 ? [1, 1] : _ref$args,\n      _ref$minDepthThreshol = _ref.minDepthThreshold,\n      minDepthThreshold = _ref$minDepthThreshol === void 0 ? 0.9 : _ref$minDepthThreshol,\n      _ref$maxDepthThreshol = _ref.maxDepthThreshold,\n      maxDepthThreshold = _ref$maxDepthThreshol === void 0 ? 1 : _ref$maxDepthThreshol,\n      _ref$depthScale = _ref.depthScale,\n      depthScale = _ref$depthScale === void 0 ? 0 : _ref$depthScale,\n      _ref$depthToBlurRatio = _ref.depthToBlurRatioBias,\n      depthToBlurRatioBias = _ref$depthToBlurRatio === void 0 ? 0.25 : _ref$depthToBlurRatio,\n      mirror = _ref.mirror,\n      children = _ref.children,\n      _ref$debug = _ref.debug,\n      debug = _ref$debug === void 0 ? 0 : _ref$debug,\n      props = _objectWithoutPropertiesLoose(_ref, [\"mixBlur\", \"mixStrength\", \"resolution\", \"blur\", \"args\", \"minDepthThreshold\", \"maxDepthThreshold\", \"depthScale\", \"depthToBlurRatioBias\", \"mirror\", \"children\", \"debug\"]);\n\n  blur = Array.isArray(blur) ? blur : [blur, blur];\n  var hasBlur = blur[0] + blur[1] > 0;\n  var meshRef = useRef(null);\n\n  var _useState = useState(function () {\n    return new Plane();\n  }),\n      reflectorPlane = _useState[0];\n\n  var _useState2 = useState(function () {\n    return new Vector3();\n  }),\n      normal = _useState2[0];\n\n  var _useState3 = useState(function () {\n    return new Vector3();\n  }),\n      reflectorWorldPosition = _useState3[0];\n\n  var _useState4 = useState(function () {\n    return new Vector3();\n  }),\n      cameraWorldPosition = _useState4[0];\n\n  var _useState5 = useState(function () {\n    return new Matrix4();\n  }),\n      rotationMatrix = _useState5[0];\n\n  var _useState6 = useState(function () {\n    return new Vector3(0, 0, -1);\n  }),\n      lookAtPosition = _useState6[0];\n\n  var _useState7 = useState(function () {\n    return new Vector4();\n  }),\n      clipPlane = _useState7[0];\n\n  var _useState8 = useState(function () {\n    return new Vector3();\n  }),\n      view = _useState8[0];\n\n  var _useState9 = useState(function () {\n    return new Vector3();\n  }),\n      target = _useState9[0];\n\n  var _useState10 = useState(function () {\n    return new Vector4();\n  }),\n      q = _useState10[0];\n\n  var _useState11 = useState(function () {\n    return new Matrix4();\n  }),\n      textureMatrix = _useState11[0];\n\n  var _useState12 = useState(function () {\n    return new PerspectiveCamera();\n  }),\n      virtualCamera = _useState12[0];\n\n  var _useThree = useThree(),\n      gl = _useThree.gl,\n      scene = _useThree.scene,\n      camera = _useThree.camera;\n\n  var beforeRender = useCallback(function () {\n    reflectorWorldPosition.setFromMatrixPosition(meshRef.current.matrixWorld);\n    cameraWorldPosition.setFromMatrixPosition(camera.matrixWorld);\n    rotationMatrix.extractRotation(meshRef.current.matrixWorld);\n    normal.set(0, 0, 1);\n    normal.applyMatrix4(rotationMatrix);\n    view.subVectors(reflectorWorldPosition, cameraWorldPosition); // Avoid rendering when reflector is facing away\n\n    if (view.dot(normal) > 0) return;\n    view.reflect(normal).negate();\n    view.add(reflectorWorldPosition);\n    rotationMatrix.extractRotation(camera.matrixWorld);\n    lookAtPosition.set(0, 0, -1);\n    lookAtPosition.applyMatrix4(rotationMatrix);\n    lookAtPosition.add(cameraWorldPosition);\n    target.subVectors(reflectorWorldPosition, lookAtPosition);\n    target.reflect(normal).negate();\n    target.add(reflectorWorldPosition);\n    virtualCamera.position.copy(view);\n    virtualCamera.up.set(0, 1, 0);\n    virtualCamera.up.applyMatrix4(rotationMatrix);\n    virtualCamera.up.reflect(normal);\n    virtualCamera.lookAt(target);\n    virtualCamera.far = camera.far; // Used in WebGLBackground\n\n    virtualCamera.updateMatrixWorld();\n    virtualCamera.projectionMatrix.copy(camera.projectionMatrix); // Update the texture matrix\n\n    textureMatrix.set(0.5, 0.0, 0.0, 0.5, 0.0, 0.5, 0.0, 0.5, 0.0, 0.0, 0.5, 0.5, 0.0, 0.0, 0.0, 1.0);\n    textureMatrix.multiply(virtualCamera.projectionMatrix);\n    textureMatrix.multiply(virtualCamera.matrixWorldInverse);\n    textureMatrix.multiply(meshRef.current.matrixWorld); // Now update projection matrix with new clip plane, implementing code from: http://www.terathon.com/code/oblique.html\n    // Paper explaining this technique: http://www.terathon.com/lengyel/Lengyel-Oblique.pdf\n\n    reflectorPlane.setFromNormalAndCoplanarPoint(normal, reflectorWorldPosition);\n    reflectorPlane.applyMatrix4(virtualCamera.matrixWorldInverse);\n    clipPlane.set(reflectorPlane.normal.x, reflectorPlane.normal.y, reflectorPlane.normal.z, reflectorPlane.constant);\n    var projectionMatrix = virtualCamera.projectionMatrix;\n    q.x = (Math.sign(clipPlane.x) + projectionMatrix.elements[8]) / projectionMatrix.elements[0];\n    q.y = (Math.sign(clipPlane.y) + projectionMatrix.elements[9]) / projectionMatrix.elements[5];\n    q.z = -1.0;\n    q.w = (1.0 + projectionMatrix.elements[10]) / projectionMatrix.elements[14]; // Calculate the scaled plane vector\n\n    clipPlane.multiplyScalar(2.0 / clipPlane.dot(q)); // Replacing the third row of the projection matrix\n\n    projectionMatrix.elements[2] = clipPlane.x;\n    projectionMatrix.elements[6] = clipPlane.y;\n    projectionMatrix.elements[10] = clipPlane.z + 1.0;\n    projectionMatrix.elements[14] = clipPlane.w; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  var _useMemo = useMemo(function () {\n    var parameters = {\n      minFilter: LinearFilter,\n      magFilter: LinearFilter,\n      format: RGBFormat,\n      encoding: gl.outputEncoding\n    };\n    var fbo1 = new WebGLRenderTarget(resolution, resolution, parameters);\n    fbo1.depthBuffer = true;\n    fbo1.depthTexture = new DepthTexture(resolution, resolution);\n    fbo1.depthTexture.format = DepthFormat;\n    fbo1.depthTexture.type = UnsignedShortType;\n    var fbo2 = new WebGLRenderTarget(resolution, resolution, parameters);\n    var blurpass = new BlurPass({\n      gl: gl,\n      resolution: resolution,\n      width: blur[0],\n      height: blur[1],\n      minDepthThreshold: minDepthThreshold,\n      maxDepthThreshold: maxDepthThreshold,\n      depthScale: depthScale,\n      depthToBlurRatioBias: depthToBlurRatioBias\n    });\n    var reflectorProps = {\n      mirror: mirror,\n      textureMatrix: textureMatrix,\n      mixBlur: mixBlur,\n      tDiffuse: fbo1.texture,\n      tDepth: fbo1.depthTexture,\n      tDiffuseBlur: fbo2.texture,\n      hasBlur: hasBlur,\n      mixStrength: mixStrength,\n      minDepthThreshold: minDepthThreshold,\n      maxDepthThreshold: maxDepthThreshold,\n      depthScale: depthScale,\n      depthToBlurRatioBias: depthToBlurRatioBias,\n      transparent: true,\n      debug: debug,\n      'defines-USE_BLUR': hasBlur,\n      'defines-USE_DEPTH': depthScale > 0\n    };\n    return [fbo1, fbo2, blurpass, reflectorProps];\n  }, [gl, blur, textureMatrix, resolution, mirror, hasBlur, mixBlur, mixStrength, minDepthThreshold, maxDepthThreshold, depthScale, depthToBlurRatioBias, debug]),\n      fbo1 = _useMemo[0],\n      fbo2 = _useMemo[1],\n      blurpass = _useMemo[2],\n      reflectorProps = _useMemo[3];\n\n  useFrame(function () {\n    if (!(meshRef == null ? void 0 : meshRef.current)) return;\n    meshRef.current.visible = false;\n    beforeRender();\n    gl.setRenderTarget(fbo1);\n    gl.render(scene, virtualCamera);\n    if (hasBlur) blurpass.render(gl, fbo1, fbo2);\n    meshRef.current.visible = true;\n    gl.setRenderTarget(null);\n  });\n  return /*#__PURE__*/createElement(\"mesh\", _extends({\n    ref: meshRef\n  }, props), /*#__PURE__*/createElement(\"planeBufferGeometry\", {\n    args: args\n  }), children ? children('meshReflectorMaterial', reflectorProps) : /*#__PURE__*/createElement(\"meshReflectorMaterial\", reflectorProps));\n}\n\n_s(Reflector, \"3v5sdN357BWjz62rUm+hWGeomx4=\", false, function () {\n  return [useThree, useFrame];\n});\n\n_c = Reflector;\nexport { Reflector };\n\nvar _c;\n\n$RefreshReg$(_c, \"Reflector\");","map":{"version":3,"sources":["D:/AA_CLASS/COURS GOBELINS DMII1/ARTISANAT/artisanat-gobelins-vercel/app/node_modules/@react-three/drei/core/Reflector.js"],"names":["_extends","_objectWithoutPropertiesLoose","useRef","useState","useCallback","useMemo","createElement","Plane","Vector3","Matrix4","Vector4","PerspectiveCamera","LinearFilter","RGBFormat","WebGLRenderTarget","DepthTexture","DepthFormat","UnsignedShortType","extend","useThree","useFrame","BlurPass","MeshReflectorMaterial","Reflector","_ref","mixBlur","mixStrength","resolution","blur","args","minDepthThreshold","maxDepthThreshold","depthScale","depthToBlurRatioBias","mirror","children","debug","props","Array","isArray","hasBlur","meshRef","reflectorPlane","normal","reflectorWorldPosition","cameraWorldPosition","rotationMatrix","lookAtPosition","clipPlane","view","target","q","textureMatrix","virtualCamera","gl","scene","camera","beforeRender","setFromMatrixPosition","current","matrixWorld","extractRotation","set","applyMatrix4","subVectors","dot","reflect","negate","add","position","copy","up","lookAt","far","updateMatrixWorld","projectionMatrix","multiply","matrixWorldInverse","setFromNormalAndCoplanarPoint","x","y","z","constant","Math","sign","elements","w","multiplyScalar","parameters","minFilter","magFilter","format","encoding","outputEncoding","fbo1","depthBuffer","depthTexture","type","fbo2","blurpass","width","height","reflectorProps","tDiffuse","texture","tDepth","tDiffuseBlur","transparent","visible","setRenderTarget","render","ref"],"mappings":"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","sourcesContent":["import _extends from '@babel/runtime/helpers/esm/extends';\nimport _objectWithoutPropertiesLoose from '@babel/runtime/helpers/esm/objectWithoutPropertiesLoose';\nimport { useRef, useState, useCallback, useMemo, createElement } from 'react';\nimport { Plane, Vector3, Matrix4, Vector4, PerspectiveCamera, LinearFilter, RGBFormat, WebGLRenderTarget, DepthTexture, DepthFormat, UnsignedShortType } from 'three';\nimport { extend, useThree, useFrame } from 'react-three-fiber';\nimport { BlurPass } from '../materials/BlurPass.js';\nimport { MeshReflectorMaterial } from '../materials/MeshReflectorMaterial.js';\n\nextend({\n  MeshReflectorMaterial\n});\nfunction Reflector(_ref) {\n  let {\n    mixBlur = 0.0,\n    mixStrength = 0.5,\n    resolution = 256,\n    blur = [0, 0],\n    args = [1, 1],\n    minDepthThreshold = 0.9,\n    maxDepthThreshold = 1,\n    depthScale = 0,\n    depthToBlurRatioBias = 0.25,\n    mirror,\n    children,\n    debug = 0\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, [\"mixBlur\", \"mixStrength\", \"resolution\", \"blur\", \"args\", \"minDepthThreshold\", \"maxDepthThreshold\", \"depthScale\", \"depthToBlurRatioBias\", \"mirror\", \"children\", \"debug\"]);\n\n  blur = Array.isArray(blur) ? blur : [blur, blur];\n  const hasBlur = blur[0] + blur[1] > 0;\n  const meshRef = useRef(null);\n  const [reflectorPlane] = useState(() => new Plane());\n  const [normal] = useState(() => new Vector3());\n  const [reflectorWorldPosition] = useState(() => new Vector3());\n  const [cameraWorldPosition] = useState(() => new Vector3());\n  const [rotationMatrix] = useState(() => new Matrix4());\n  const [lookAtPosition] = useState(() => new Vector3(0, 0, -1));\n  const [clipPlane] = useState(() => new Vector4());\n  const [view] = useState(() => new Vector3());\n  const [target] = useState(() => new Vector3());\n  const [q] = useState(() => new Vector4());\n  const [textureMatrix] = useState(() => new Matrix4());\n  const [virtualCamera] = useState(() => new PerspectiveCamera());\n  const {\n    gl,\n    scene,\n    camera\n  } = useThree();\n  const beforeRender = useCallback(() => {\n    reflectorWorldPosition.setFromMatrixPosition(meshRef.current.matrixWorld);\n    cameraWorldPosition.setFromMatrixPosition(camera.matrixWorld);\n    rotationMatrix.extractRotation(meshRef.current.matrixWorld);\n    normal.set(0, 0, 1);\n    normal.applyMatrix4(rotationMatrix);\n    view.subVectors(reflectorWorldPosition, cameraWorldPosition); // Avoid rendering when reflector is facing away\n\n    if (view.dot(normal) > 0) return;\n    view.reflect(normal).negate();\n    view.add(reflectorWorldPosition);\n    rotationMatrix.extractRotation(camera.matrixWorld);\n    lookAtPosition.set(0, 0, -1);\n    lookAtPosition.applyMatrix4(rotationMatrix);\n    lookAtPosition.add(cameraWorldPosition);\n    target.subVectors(reflectorWorldPosition, lookAtPosition);\n    target.reflect(normal).negate();\n    target.add(reflectorWorldPosition);\n    virtualCamera.position.copy(view);\n    virtualCamera.up.set(0, 1, 0);\n    virtualCamera.up.applyMatrix4(rotationMatrix);\n    virtualCamera.up.reflect(normal);\n    virtualCamera.lookAt(target);\n    virtualCamera.far = camera.far; // Used in WebGLBackground\n\n    virtualCamera.updateMatrixWorld();\n    virtualCamera.projectionMatrix.copy(camera.projectionMatrix); // Update the texture matrix\n\n    textureMatrix.set(0.5, 0.0, 0.0, 0.5, 0.0, 0.5, 0.0, 0.5, 0.0, 0.0, 0.5, 0.5, 0.0, 0.0, 0.0, 1.0);\n    textureMatrix.multiply(virtualCamera.projectionMatrix);\n    textureMatrix.multiply(virtualCamera.matrixWorldInverse);\n    textureMatrix.multiply(meshRef.current.matrixWorld); // Now update projection matrix with new clip plane, implementing code from: http://www.terathon.com/code/oblique.html\n    // Paper explaining this technique: http://www.terathon.com/lengyel/Lengyel-Oblique.pdf\n\n    reflectorPlane.setFromNormalAndCoplanarPoint(normal, reflectorWorldPosition);\n    reflectorPlane.applyMatrix4(virtualCamera.matrixWorldInverse);\n    clipPlane.set(reflectorPlane.normal.x, reflectorPlane.normal.y, reflectorPlane.normal.z, reflectorPlane.constant);\n    const projectionMatrix = virtualCamera.projectionMatrix;\n    q.x = (Math.sign(clipPlane.x) + projectionMatrix.elements[8]) / projectionMatrix.elements[0];\n    q.y = (Math.sign(clipPlane.y) + projectionMatrix.elements[9]) / projectionMatrix.elements[5];\n    q.z = -1.0;\n    q.w = (1.0 + projectionMatrix.elements[10]) / projectionMatrix.elements[14]; // Calculate the scaled plane vector\n\n    clipPlane.multiplyScalar(2.0 / clipPlane.dot(q)); // Replacing the third row of the projection matrix\n\n    projectionMatrix.elements[2] = clipPlane.x;\n    projectionMatrix.elements[6] = clipPlane.y;\n    projectionMatrix.elements[10] = clipPlane.z + 1.0;\n    projectionMatrix.elements[14] = clipPlane.w; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  const [fbo1, fbo2, blurpass, reflectorProps] = useMemo(() => {\n    const parameters = {\n      minFilter: LinearFilter,\n      magFilter: LinearFilter,\n      format: RGBFormat,\n      encoding: gl.outputEncoding\n    };\n    const fbo1 = new WebGLRenderTarget(resolution, resolution, parameters);\n    fbo1.depthBuffer = true;\n    fbo1.depthTexture = new DepthTexture(resolution, resolution);\n    fbo1.depthTexture.format = DepthFormat;\n    fbo1.depthTexture.type = UnsignedShortType;\n    const fbo2 = new WebGLRenderTarget(resolution, resolution, parameters);\n    const blurpass = new BlurPass({\n      gl,\n      resolution,\n      width: blur[0],\n      height: blur[1],\n      minDepthThreshold,\n      maxDepthThreshold,\n      depthScale,\n      depthToBlurRatioBias\n    });\n    const reflectorProps = {\n      mirror,\n      textureMatrix,\n      mixBlur,\n      tDiffuse: fbo1.texture,\n      tDepth: fbo1.depthTexture,\n      tDiffuseBlur: fbo2.texture,\n      hasBlur,\n      mixStrength,\n      minDepthThreshold,\n      maxDepthThreshold,\n      depthScale,\n      depthToBlurRatioBias,\n      transparent: true,\n      debug,\n      'defines-USE_BLUR': hasBlur,\n      'defines-USE_DEPTH': depthScale > 0\n    };\n    return [fbo1, fbo2, blurpass, reflectorProps];\n  }, [gl, blur, textureMatrix, resolution, mirror, hasBlur, mixBlur, mixStrength, minDepthThreshold, maxDepthThreshold, depthScale, depthToBlurRatioBias, debug]);\n  useFrame(() => {\n    if (!(meshRef == null ? void 0 : meshRef.current)) return;\n    meshRef.current.visible = false;\n    beforeRender();\n    gl.setRenderTarget(fbo1);\n    gl.render(scene, virtualCamera);\n    if (hasBlur) blurpass.render(gl, fbo1, fbo2);\n    meshRef.current.visible = true;\n    gl.setRenderTarget(null);\n  });\n  return /*#__PURE__*/createElement(\"mesh\", _extends({\n    ref: meshRef\n  }, props), /*#__PURE__*/createElement(\"planeBufferGeometry\", {\n    args: args\n  }), children ? children('meshReflectorMaterial', reflectorProps) : /*#__PURE__*/createElement(\"meshReflectorMaterial\", reflectorProps));\n}\n\nexport { Reflector };\n"]},"metadata":{},"sourceType":"module"}